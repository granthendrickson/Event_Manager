{"ast":null,"code":"var _jsxFileName = \"/Volumes/SSD/School/COP4710/Event_Manager/client/src/components/Login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n  // Initialize state to store input values\n  const [user, setUser] = useState({\n    username: '',\n    password: ''\n  });\n\n  // Function to handle input changes\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setUser({\n      ...user,\n      [name]: value\n    });\n  };\n  const handleLogin = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/Login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(user)\n      });\n      if (!response.ok) {\n        throw new Error('Failed to Login');\n      }\n      const user = await response.json();\n      console.log('Logged in as:', user);\n    } catch (error) {\n      console.error('Error loggin in:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Username:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"username\",\n      value: user.username,\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Password:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"password\",\n      value: user.password,\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogin,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 3\n  }, this);\n}\n_s(Login, \"fcTHSSBPVxDtNl+WkKvCgyByw/s=\");\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Login","_s","user","setUser","username","password","handleInputChange","e","name","value","target","handleLogin","response","fetch","method","headers","body","JSON","stringify","ok","Error","json","console","log","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","_c","$RefreshReg$"],"sources":["/Volumes/SSD/School/COP4710/Event_Manager/client/src/components/Login.jsx"],"sourcesContent":["import React, { useState } from 'react';\n\nexport default function Login() {\n\t// Initialize state to store input values\n\tconst [user, setUser] = useState({\n\t\tusername: '',\n\t\tpassword: '',\n\t});\n\n\t// Function to handle input changes\n\tconst handleInputChange = (e) => {\n\t\tconst { name, value } = e.target;\n\t\tsetUser({ ...user, [name]: value });\n\t};\n\n\tconst handleLogin = async () => {\n\t\ttry {\n\t\t\tconst response = await fetch('http://localhost:8080/Login', {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify(user),\n\t\t\t});\n\t\t\tif (!response.ok) {\n\t\t\t\tthrow new Error('Failed to Login');\n\t\t\t}\n\t\t\tconst user = await response.json();\n\t\t\tconsole.log('Logged in as:', user);\n\t\t} catch (error) {\n\t\t\tconsole.error('Error loggin in:', error);\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className='login'>\n\t\t\t<label>Username:</label>\n\t\t\t<input\n\t\t\t\ttype='text'\n\t\t\t\tname='username'\n\t\t\t\tvalue={user.username}\n\t\t\t\tonChange={handleInputChange}\n\t\t\t/>\n\t\t\t<label>Password:</label>\n\t\t\t<input\n\t\t\t\ttype='text'\n\t\t\t\tname='password'\n\t\t\t\tvalue={user.password}\n\t\t\t\tonChange={handleInputChange}\n\t\t\t/>\n\t\t\t<button onClick={handleLogin}>Login</button>\n\t\t</div>\n\t);\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,eAAe,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EAC/B;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC;IAChCO,QAAQ,EAAE,EAAE;IACZC,QAAQ,EAAE;EACX,CAAC,CAAC;;EAEF;EACA,MAAMC,iBAAiB,GAAIC,CAAC,IAAK;IAChC,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChCP,OAAO,CAAC;MAAE,GAAGD,IAAI;MAAE,CAACM,IAAI,GAAGC;IAAM,CAAC,CAAC;EACpC,CAAC;EAED,MAAME,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACH,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,EAAE;QAC3DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACR,cAAc,EAAE;QACjB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAChB,IAAI;MAC1B,CAAC,CAAC;MACF,IAAI,CAACU,QAAQ,CAACO,EAAE,EAAE;QACjB,MAAM,IAAIC,KAAK,CAAC,iBAAiB,CAAC;MACnC;MACA,MAAMlB,IAAI,GAAG,MAAMU,QAAQ,CAACS,IAAI,CAAC,CAAC;MAClCC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAErB,IAAI,CAAC;IACnC,CAAC,CAAC,OAAOsB,KAAK,EAAE;MACfF,OAAO,CAACE,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;IACzC;EACD,CAAC;EAED,oBACCzB,OAAA;IAAK0B,SAAS,EAAC,OAAO;IAAAC,QAAA,gBACrB3B,OAAA;MAAA2B,QAAA,EAAO;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACxB/B,OAAA;MACCgC,IAAI,EAAC,MAAM;MACXvB,IAAI,EAAC,UAAU;MACfC,KAAK,EAAEP,IAAI,CAACE,QAAS;MACrB4B,QAAQ,EAAE1B;IAAkB;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC,eACF/B,OAAA;MAAA2B,QAAA,EAAO;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACxB/B,OAAA;MACCgC,IAAI,EAAC,MAAM;MACXvB,IAAI,EAAC,UAAU;MACfC,KAAK,EAAEP,IAAI,CAACG,QAAS;MACrB2B,QAAQ,EAAE1B;IAAkB;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC,eACF/B,OAAA;MAAQkC,OAAO,EAAEtB,WAAY;MAAAe,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxC,CAAC;AAER;AAAC7B,EAAA,CAnDuBD,KAAK;AAAAkC,EAAA,GAALlC,KAAK;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}